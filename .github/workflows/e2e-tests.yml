name: E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  e2e-tests:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: tokuteigino_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        cd frontend
        npm ci

    - name: Install Playwright Browsers
      run: |
        cd frontend
        npx playwright install --with-deps

    - name: Setup test environment
      run: |
        # Setup test database and environment variables
        echo "Setting up test environment..."
        
    - name: Start backend server
      run: |
        cd backend
        pip install -r requirements.txt
        uvicorn main:app --host 0.0.0.0 --port 8000 &
        echo $! > backend.pid
        sleep 10
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/tokuteigino_test
        REDIS_URL: redis://localhost:6379

    - name: Start frontend server
      run: |
        cd frontend
        npm run build
        npm run preview --port 5173 &
        echo $! > frontend.pid
        sleep 10
      env:
        VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
        VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}

    - name: Wait for servers to be ready
      run: |
        # Wait for backend
        timeout 60 bash -c 'until curl -f http://localhost:8000/health; do sleep 2; done'
        # Wait for frontend  
        timeout 60 bash -c 'until curl -f http://localhost:5173; do sleep 2; done'

    - name: Run E2E tests
      run: |
        cd frontend
        npm run test:e2e
      env:
        PLAYWRIGHT_BASE_URL: http://localhost:5173

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: frontend/test-results/
        retention-days: 30

    - name: Upload screenshots
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: playwright-screenshots
        path: frontend/test-results/
        retention-days: 7

    - name: Cleanup
      if: always()
      run: |
        # Kill background processes
        if [ -f backend/backend.pid ]; then
          kill $(cat backend/backend.pid) || true
        fi
        if [ -f frontend/frontend.pid ]; then
          kill $(cat frontend/frontend.pid) || true
        fi

  e2e-tests-docker:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Build and start services
      run: |
        # Build Docker images
        docker-compose build
        
        # Start services
        docker-compose up -d
        
        # Wait for services to be healthy
        docker-compose exec -T frontend sh -c 'timeout 60 bash -c "until curl -f http://localhost:5173; do sleep 2; done"'
        docker-compose exec -T backend sh -c 'timeout 60 bash -c "until curl -f http://localhost:8000/health; do sleep 2; done"'

    - name: Install Playwright in container
      run: |
        docker-compose exec -T frontend npx playwright install --with-deps chromium

    - name: Run E2E tests in Docker
      run: |
        docker-compose exec -T frontend npm run test:e2e

    - name: Upload Docker test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: docker-playwright-report
        path: frontend/test-results/
        retention-days: 30

    - name: Cleanup Docker
      if: always()
      run: |
        docker-compose down -v